//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#ifndef _COMPONENTFACEDETECTIONCORE_HH
#define _COMPONENTFACEDETECTIONCORE_HH
	
#include "aceSmartSoft.hh"
#include <iostream>

#include <iostream>
#include <sstream>
#include <vector>

#include <opencv2/opencv.hpp>
#include <DomainVision/CommVideoImage.hh>
#include <DomainVision/CommRGBDImage.hh>
#include <CommPerception/CommPersonDetection.hh>

using namespace std;

class ComponentFaceDetectionCore
{
private:
	CommPerception::CommPersonDetection _person_info;
	SmartACE::SmartIniParameter* param = nullptr;

	void addParam(const string& inifile);

public:
	ComponentFaceDetectionCore();
	void setPersonInfo(const std::vector<CommPerception::CommPersonInf>& person_info);
	CommPerception::CommPersonDetection getPersonInfo();

	template <typename T>
	bool getParam(const string& prefix_name, const string &param_name, T &param_val, const T &default_val) const
	{
		if (param==nullptr) {
			return false;
		}
	    if (param->checkIfParameterExists(prefix_name, param_name)) {
	        map<string, string> param_map = param->getAllParametersFromGroup(prefix_name);

	        istringstream iss(param_map[param_name]);
	        iss >> param_val;

	        return true;
	    } else {
	        param_val = default_val;
	        return true;
	    }
	}

};
	
#endif
