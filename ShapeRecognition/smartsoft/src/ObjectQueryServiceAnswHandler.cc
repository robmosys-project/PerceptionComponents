//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#include "ObjectQueryServiceAnswHandler.hh"
#include "ShapeRecognition.hh"

ObjectQueryServiceAnswHandler::ObjectQueryServiceAnswHandler(Smart::IQueryServerPattern<CommObjectRecognitionObjects::CommInfDetection, CommObjectRecognitionObjects::CommObjectRecognitionObjectProperties, SmartACE::QueryId>* server)
:	ObjectQueryServiceAnswHandlerCore(server)
{
	
}

ObjectQueryServiceAnswHandler::~ObjectQueryServiceAnswHandler()
{
	
}


void ObjectQueryServiceAnswHandler::handleQuery(const SmartACE::QueryId &id, const CommObjectRecognitionObjects::CommInfDetection& request) 
{
	std::cout<< "[ObjectQueryService] Service Call"<<std::endl;
	std::cout<< "[ObjectQueryService] Service Call"<<request.getShape().getName()<<std::endl;

	CommObjectRecognitionObjects::CommObjectRecognitionObjectProperties answer;
	CommBasicObjects::CommPose3d pose;
	if(request.getShape().getName() ==  CommObjectRecognitionObjects::Shapes::SPHERE){
		if(COMP->sphere_list.size() >0 )
			pose.setPosition(COMP->sphere_list[0]);
	}
	if(request.getShape().getName() ==  CommObjectRecognitionObjects::Shapes::CUBE){
		if(COMP->cube_list.size() >0 )
			pose.setPosition(COMP->cube_list[0]);
	}
	if(request.getShape().getName() ==  CommObjectRecognitionObjects::Shapes::CYLINDER){
		if(COMP->cylinder_list.size() >0 )
			pose.setPosition(COMP->cylinder_list[0]);
	}
	answer.setPose(pose);
	this->server->answer(id, answer);
}
