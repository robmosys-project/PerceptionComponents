//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#ifndef _CAPTURESENSOR_HH
#define _CAPTURESENSOR_HH


#include "CaptureSensorCore.hh"
#include "DomainVision/CommVideoImage.hh"

#include <smartIniParameter.hh>

#include <opencv2/objdetect.hpp>
#include <opencv2/imgproc.hpp>

#include <vector>
#include <string>

class CaptureSensor  : public CaptureSensorCore
{
public:
	CaptureSensor(SmartACE::SmartComponent *comp);
	virtual ~CaptureSensor();
	
	virtual int on_entry();
	virtual int on_execute();
	virtual int on_exit();

private:
	DomainVision::CommVideoImage _input_image;

	// cascade classifier
	std::string _face_cascade_filename = "/home/rosmosys/haarcascade_frontalface_alt.xml";
	//std::string _face_cascade_filename = "./data/haarcascade_frontalface_alt.xml";
	cv::CascadeClassifier _cascade;

	cv::Mat getMat(const DomainVision::CommVideoImage &input);
	std::vector<cv::Rect> faceDetect(const cv::Mat& img);
	void on_RGBImagePushServiceIn(const DomainVision::CommVideoImage &input);
};

#endif
