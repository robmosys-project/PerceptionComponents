//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#include "ObjectRecognitionQueryServiceAnsw.hh"
#include "ObjectDetection.hh"

ObjectRecognitionQueryServiceAnsw::ObjectRecognitionQueryServiceAnsw(Smart::IQueryServerPattern<CommObjectRecognitionObjects::CommObjectRecognitionInformation, CommObjectRecognitionObjects::CommObjectRecognitionObjectProperties, SmartACE::QueryId>* server)
:	ObjectRecognitionQueryServiceAnswCore(server)
{
	Smart::StatusCode status = COMP->colorQueryServiceReq->connect("ColorSegmentation", "ColorQueryServiceAnsw");

	if(status != Smart::SMART_OK) {
		std::cerr << "objectRecognitionQueryServiceReq: " << Smart::StatusCodeConversion(status);
	}

}

ObjectRecognitionQueryServiceAnsw::~ObjectRecognitionQueryServiceAnsw()
{
	
}

void ObjectRecognitionQueryServiceAnsw::setAnswer(CommObjectRecognitionObjects::CommPoint2d input)
{
	this->serviceAnswer = input ;
}


#include <thread>
#include <chrono>

void ObjectRecognitionQueryServiceAnsw::handleQuery(const SmartACE::QueryId &id, const CommObjectRecognitionObjects::CommObjectRecognitionInformation& request) 
{

	std::cout<< "[ObjectRecognitionQuery] roi width:"<<request.getRoi().getWidth() <<", height:"<<request.getRoi().getHeight()<<std::endl;

	CommObjectRecognitionObjects::CommObjectRecognitionObjectProperties answer;
	
	COMP->evaluateColorSegmentation = true;
	COMP->roiObject = request.getRoi();

	//	TODO Pasar de 2d a 3d con object_information
	CommBasicObjects::CommPose3d p_object;
	p_object.set_x(12);
	p_object.set_y(52),
	p_object.set_z(142);

	answer.setPose(p_object);

	
	this->server->answer(id, answer);
}
